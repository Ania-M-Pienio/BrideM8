{"version":3,"sources":["assets/leaf-lv.png","assets/leaf-rv.png","assets/leaf-c.png","assets/BM8B.png","firebaseConfig.js","components/Setting.js","components/Choice.js","components/SeasonContainer.js","components/TimeContainer.js","components/ColorChoice.js","components/ColorContainer.js","components/Idea.js","components/IdeasContainer.js","components/PhotoContainer.js","components/MainContainer.js","components/SettingContainer.js","components/Logo.js","components/AppBar.js","components/Splash.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Setting","state","graphics","type","icon","thisGraphic","icons","colorOne","colorTwo","this","props","includes","filter","i","split","className","size","Component","Choice","selected","role","choice","onClick","onSeason","htmlFor","id","name","choiceGroup","onChange","SeasonContainer","aria-label","currentSeason","TimeContainer","currentTime","onTime","ColorChoice","onColor","choiceSet","ColorContainer","colorChoices","map","key","colors","primary","secondary","currentColor","Idea","current","domain","url","layout","src","alt","IdeasContainer","handleLeft","page","setState","handleRight","handleChangeToGrid","gridMode","handleChangeToBook","domains","cake","favor","floral","invite","pattern","tableware","venue","pageOne","pageTwo","pageOneDomain","photos","pageOneIcon","pageTwoDomain","pageTwoIcon","photoUrl","photo","index","PhotoContainer","length","MainContainer","handleNext","nowIndex","stages","indexOf","stage","onRollForward","handleBack","onRollBack","season","time","color","SettingContainer","Logo","leafRV","leafC","m8","leafLV","AppBar","onStartOver","Splash","expand","onStart","library","add","fab","faUmbrella","faSnowflake","faLeaf","faSun","faUmbrellaBeach","faMoon","faCloudRain","faPalette","faBirthdayCake","faGift","faSpa","faWineGlass","faChessBoard","faEnvelopeOpenText","faDoorOpen","faShapes","faCaretSquareLeft","faCaretSquareRight","faHome","faGripVertical","faBookOpen","faSignInAlt","App","handleRollBack","setback","colorSet","handleRollForward","forward","getColorSets","handleStart","isIntro","handleStartOver","handleSeasonChoice","handleTimeChoice","handleColorChoice","getPhotoSets","database","ref","on","response","setsFromDB","val","arrayOfDBSets","push","seasons","filteredSets","set","slice","photosFromDB","arrayDBPhotos","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bb2f6ab7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leaf-lv.396f651a.png\";","module.exports = __webpack_public_path__ + \"static/media/leaf-rv.1d4b1254.png\";","module.exports = __webpack_public_path__ + \"static/media/leaf-c.9d64527d.png\";","module.exports = __webpack_public_path__ + \"static/media/BM8B.d1a2970f.png\";","import firebase from 'firebase';\r\n\r\n// Configure Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAMMOkh5Ls1WnsR5wCHrLVXTk5H3kBDYK0\",\r\n  authDomain: \"bridem8-79cc0.firebaseapp.com\",\r\n  databaseURL: \"https://bridem8-79cc0.firebaseio.com\",\r\n  projectId: \"bridem8-79cc0\",\r\n  storageBucket: \"bridem8-79cc0.appspot.com\",\r\n  messagingSenderId: \"168735233550\",\r\n  appId: \"1:168735233550:web:3f1d2281bcfefdbbb48e5f\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Setting extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // all the differnt types of icons that the Setting could display\r\n      graphics: [\r\n        { type: \"winter\", icon: \"snowflake\" },\r\n        { type: \"spring\", icon: \"leaf\" },\r\n        { type: \"summer\", icon: \"umbrella-beach\" },\r\n        { type: \"fall\", icon: \"cloud-rain\" },\r\n        { type: \"daytime\", icon: \"sun\" },\r\n        { type: \"evening\", icon: \"moon\" },\r\n        { type: \"color\", icon: \"palette\" },\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let thisGraphic = \"\";\r\n    let icons = [];\r\n    let colorOne = \"\";\r\n    let colorTwo = \"\";\r\n    // determining which kind of icon should be used in the display of the setting\r\n    if (this.props.icon.includes(\"_\")) {\r\n      icons = this.state.graphics.filter((i) => i.type === \"color\");\r\n      colorOne = this.props.icon.split(\"_\")[0];\r\n      colorTwo = this.props.icon.split(\"_\")[1];\r\n    } else {\r\n      icons = this.state.graphics.filter((i) => i.type === this.props.icon);\r\n    }\r\n    // select the filtered icon every time component renders\r\n    thisGraphic = icons[0];\r\n\r\n    return (\r\n      <div className=\"setting\">\r\n        {this.props.icon ? (\r\n          <FontAwesomeIcon icon={thisGraphic.icon} size={this.props.size} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <h3>\r\n          <span></span>\r\n          {this.props.icon.includes(\"_\") ? (\r\n            <span>\r\n              {\" \"}\r\n              <span>{colorOne}</span> &amp; <span>{colorTwo}</span>{\" \"}\r\n            </span>\r\n          ) : (\r\n            <span> {thisGraphic.type}</span>\r\n          )}\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Setting;\r\n","import React, { Component } from \"react\";\r\nimport Setting from \"./Setting\";\r\n\r\nclass Choice extends Component {\r\n  render() {\r\n    return (\r\n      <div className={this.props.selected ? \"choice selected\" : \"choice\"}>\r\n        <button\r\n          role={ \"choose \" + this.props.choice}\r\n          onClick={() => {\r\n            this.props.onSeason(this.props.choice);\r\n          }}\r\n        >\r\n          <label htmlFor={this.props.choice}>   \r\n            <div className=\"choiceIcon\">\r\n              <Setting icon={this.props.choice} size=\"1x\" />\r\n            </div>\r\n          </label>\r\n          <input\r\n            type=\"radio\"\r\n            id={this.props.choice}\r\n            name={this.props.choiceGroup}\r\n            onChange={() => {\r\n              this.props.onSeason(this.props.choice);\r\n            }}\r\n          ></input>\r\n        </button>\r\n      </div>  \r\n    );\r\n  }\r\n}\r\nexport default Choice;\r\n","import React, { Component } from \"react\";\r\nimport Choice from \"./Choice\";\r\n\r\nclass SeasonContainer extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"seasonContainer\">\r\n        \r\n        <h1 aria-label=\"CHOOSE THE SEASON OF THE WEDDING\">\r\n          CHOOSE THE SEASON OF THE WEDDING\r\n        </h1>\r\n        <div className=\"seasonChoiceContainer\">\r\n          <Choice\r\n            choiceGroup=\"season\"\r\n            choice=\"winter\"\r\n            selected={this.props.currentSeason === \"winter\"}\r\n            onSeason={this.props.onSeason}\r\n          />\r\n          <Choice\r\n            choiceGroup=\"season\"\r\n            choice=\"spring\"\r\n            selected={this.props.currentSeason === \"spring\"}\r\n            onSeason={this.props.onSeason}\r\n          />\r\n          <Choice\r\n            choiceGroup=\"season\"\r\n            choice=\"summer\"\r\n            selected={this.props.currentSeason === \"summer\"}\r\n            onSeason={this.props.onSeason}\r\n          />\r\n          <Choice\r\n            choiceGroup=\"season\"\r\n            choice=\"fall\"\r\n            selected={this.props.currentSeason === \"fall\"}\r\n            onSeason={this.props.onSeason}\r\n          />\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default SeasonContainer;\r\n","import React from \"react\";\r\nimport Choice from './Choice';\r\n\r\nfunction TimeContainer(props) {\r\n    return (\r\n      <section className=\"timeContainer\">\r\n        <h1 aria-label=\"CHOOSE THE TIME OF THE WEDDING\">\r\n          CHOOSE THE TIME OF THE WEDDING\r\n        </h1>\r\n        <div className=\"timeChoiceContainer\">\r\n          <Choice\r\n            choiceGroup=\"time\"\r\n            choice=\"daytime\"\r\n            selected={props.currentTime === \"daytime\"}\r\n            onSeason={props.onTime}\r\n          />\r\n          <Choice\r\n            choiceGroup=\"time\"\r\n            choice=\"evening\"\r\n            selected={props.currentTime === \"evening\"}\r\n            onSeason={props.onTime}\r\n          />\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\nexport default TimeContainer;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass ColorChoice extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.selected ? \"colorChoice selected\" : \"colorChoice\"}\r\n      >\r\n        <button\r\n          onClick={() => {\r\n            this.props.onColor(this.props.choice);\r\n          }}\r\n        >\r\n          <h3 className=\"colorTitle\">\r\n            <span>{this.props.choiceSet.colorOne} </span>\r\n            <span>{this.props.choiceSet.colorTwo} </span>\r\n          </h3>\r\n\r\n          <label htmlFor={this.props.choice}>\r\n            <div className=\"colorChoiceIcon\">\r\n              <div\r\n                className={\"colorTwo \" + this.props.choiceSet.colorTwo}\r\n              ></div>\r\n              <div\r\n                className={\"colorOne \" + this.props.choiceSet.colorOne}\r\n              ></div>\r\n              <span className=\"colorSelect\">\r\n                <FontAwesomeIcon icon=\"palette\" size=\"1x\" />\r\n              </span>\r\n            </div>\r\n          </label>\r\n          <input\r\n            type=\"radio\"\r\n            id={this.props.choice}\r\n            name={this.props.choiceGroup}\r\n            onClick={() => {\r\n              this.props.onColor(this.props.choice);\r\n            }}\r\n          ></input>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ColorChoice;\r\n","import React from \"react\";\r\nimport ColorChoice from \"./ColorChoice\";\r\n\r\nfunction ColorContainer(props) {\r\n    return (\r\n      <section className=\"colorContainer\">\r\n        <h1 aria-label=\"PICK A COLOUR SCHEME\">PICK A COLOUR SCHEME</h1>\r\n        <div className=\"colorChoiceContainer\">\r\n          {props.colorChoices.map(choice => (\r\n              <ColorChoice\r\n                key={choice.colors}\r\n                choiceGroup=\"color\"\r\n                choice={choice.colors}\r\n                choiceSet={{\r\n                  colorOne: choice.primary.name,\r\n                  colorTwo: choice.secondary.name\r\n                }}\r\n                selected={props.currentColor === choice.colors}\r\n                onColor={props.onColor}\r\n              />\r\n          ))}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\nexport default ColorContainer;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction Idea({ current, domain, url, icon, layout }) {\r\n  return (\r\n    <div className={\"ideasPhotoPage \" + layout}>\r\n      <img src={url} alt={domain + \" photo idea for \" + current}></img>\r\n      <div className=\"ideasIconContainer\">\r\n        <button aria-label={domain}>\r\n          <FontAwesomeIcon icon={icon} size=\"4x\" className=\"ideaIco\" />\r\n        </button>\r\n        <h3>{domain === \"tableware\" ? \"table ware\" : domain} </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Idea;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Idea from \"./Idea\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass IdeasContainer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      gridMode: false,\r\n      page: 0,\r\n      domains: {\r\n        cake: \"birthday-cake\",\r\n        \"center piece\": \"shapes\",\r\n        favor: \"gift\",\r\n        floral: \"spa\",\r\n        invite: \"envelope-open-text\",\r\n        pattern: \"chess-board\",\r\n        tableware: \"wine-glass\",\r\n        venue: \"door-open\",\r\n      },\r\n    };\r\n  }\r\n\r\n  handleLeft = () => {\r\n    if (this.state.page > 0) {\r\n      this.setState({\r\n        page: this.state.page - 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRight = () => {\r\n    if (this.state.page < 7) {\r\n      this.setState({\r\n        page: this.state.page + 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChangeToGrid = () => {\r\n    this.setState({\r\n      gridMode: true,      \r\n    });\r\n  };\r\n\r\n  handleChangeToBook = () => {\r\n    this.setState({ \r\n      gridMode: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    // prepare data to be used in render\r\n    const pageOne = this.state.page;\r\n    let pageTwo = 0;\r\n    if (pageOne < 7) {\r\n     pageTwo = this.state.page + 1;\r\n    }\r\n    const pageOneDomain = this.props.photos[pageOne].domain;\r\n    const pageOneIcon = this.state.domains[pageOneDomain];\r\n    const pageTwoDomain = this.props.photos[pageTwo].domain;\r\n    const pageTwoIcon = this.state.domains[pageTwoDomain];\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"displayControl\">\r\n          {/* // right button */}\r\n          {pageOne > 0 && !this.state.gridMode ? (\r\n            <button type=\"button\" onClick={this.handleLeft}>\r\n              <FontAwesomeIcon\r\n                icon=\"caret-square-left\"\r\n                size=\"2x\"\r\n                className=\"icoLeft\"\r\n              />\r\n            </button>\r\n          ) : (\r\n            <div className=\"buttonSpace\"></div>\r\n          )}\r\n\r\n          {/* // book-layout button */}\r\n          <button\r\n            className={\"buttonControl\" + (this.state.gridMode ? \" layout\" : \"\")}\r\n          >\r\n            <FontAwesomeIcon\r\n              icon=\"grip-vertical\"\r\n              size=\"2x\"\r\n              className=\"icoControl\"\r\n              onClick={this.handleChangeToGrid}\r\n            />\r\n          </button>\r\n\r\n          {/* // grid-layout button */}\r\n          <button\r\n            className={\"buttonControl\" + (this.state.gridMode ? \"\" : \" layout\")}\r\n          >\r\n            <FontAwesomeIcon\r\n              icon=\"book-open\"\r\n              size=\"2x\"\r\n              className=\"icoControl\"\r\n              onClick={this.handleChangeToBook}\r\n            />\r\n          </button>\r\n\r\n          {/* // right button */}\r\n          {pageOne < 7 && !this.state.gridMode ? (\r\n            <button type=\"button\" onClick={this.handleRight}>\r\n              <FontAwesomeIcon\r\n                icon=\"caret-square-right\"\r\n                size=\"2x\"\r\n                className=\"icoRight\"\r\n              />\r\n            </button>\r\n          ) : (\r\n            <div className=\"buttonSpace\"></div>\r\n          )}\r\n        </div>\r\n        {/* end of layout control */}\r\n\r\n        <div className={\"ideasContainer\" + (pageOne === 7 ?  \" end\": \"\")}>\r\n          {!this.state.gridMode ? (\r\n            <Fragment>\r\n              <Idea\r\n                current={this.props.current}\r\n                domain={pageOneDomain}\r\n                url={this.props.photos[pageOne].photoUrl}\r\n                icon={pageOneIcon}\r\n                layout=\"page\"\r\n              />\r\n              { pageOne !== 7 ? (\r\n              <Idea\r\n                current={this.props.current}\r\n                domain={pageTwoDomain}\r\n                url={this.props.photos[pageTwo].photoUrl}\r\n                icon={pageTwoIcon}\r\n                layout=\"page\"\r\n              />\r\n              ) : \"\" }\r\n            </Fragment>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {this.state.gridMode ? (\r\n            <div className=\"altIdeaContainer\">\r\n              {this.props.photos.map((photo, index) => {\r\n                return (\r\n                  <Idea\r\n                    key={photo.photoUrl}\r\n                    current={this.props.current}\r\n                    domain={photo.domain}\r\n                    url={photo.photoUrl}\r\n                    icon={this.state.domains[photo.domain]}\r\n                    layout=\"grid\"\r\n                  ></Idea>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default IdeasContainer;\r\n","import React, { Component } from \"react\";\r\nimport IdeasContainer from \"./IdeasContainer\";\r\n\r\nclass PhotoContainer extends Component {\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"photosContainer\">\r\n      <h1 aria-label=\"YOUR WEDDING IDEAS ARE READY\">\r\n        COLOR SCHEME IDEAS\r\n      </h1>\r\n      {this.props.photos.length === 0 ? (\r\n        \"\"\r\n      ) : (\r\n        <IdeasContainer\r\n          current={this.props.currentColor}\r\n          photos={this.props.photos}\r\n        />\r\n      )}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PhotoContainer;\r\n","import React, { Component } from \"react\";\r\nimport SeasonContainer from \"./SeasonContainer\";\r\nimport TimeContainer from \"./TimeContainer\";\r\nimport ColorContainer from \"./ColorContainer\";\r\nimport PhotoContainer from \"./PhotoContainer\";\r\n\r\nclass MainContainer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      stage: \"season\",\r\n      stages: [\"season\", \"time\", \"color\", \"ideas\"],\r\n    };\r\n  }\r\n\r\n  handleNext = () => {\r\n    const nowIndex = this.state.stages.indexOf(this.state.stage);\r\n    if (this.state.stage === \"time\") {\r\n      this.props.onRollForward(this.state.stages[nowIndex]);\r\n    }\r\n    this.setState({\r\n      stage: this.state.stages[nowIndex + 1],\r\n    });\r\n  };\r\n\r\n  handleBack = () => {\r\n    const nowIndex = this.state.stages.indexOf(this.state.stage);\r\n    this.props.onRollBack(this.state.stages[nowIndex]);\r\n    this.setState({\r\n      stage: this.state.stages[nowIndex - 1],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main className={\"mainContainer\" + (this.props.season ? \" expand\" : \"\")}>\r\n        {this.state.stage === \"season\" ? (\r\n          <section>\r\n            <SeasonContainer\r\n              currentSeason={this.props.season}\r\n              onSeason={this.props.onSeason}\r\n            ></SeasonContainer>\r\n            <div className=\"buttons seasonButtons\">\r\n              {this.props.season ? (\r\n                <button\r\n                  className=\"oneWay\"\r\n                  type=\"button\"\r\n                  onClick={this.handleNext}\r\n                >\r\n                  NEXT\r\n                </button>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </section>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {this.state.stage === \"time\" ? (\r\n          <section>\r\n            <TimeContainer\r\n              currentTime={this.props.time}\r\n              onTime={this.props.onTime}\r\n            ></TimeContainer>\r\n            <div className=\"buttons timeButtons\">\r\n              <button\r\n                className={this.props.time ? \"twoWay back\" : \"oneWay\"}\r\n                type=\"button\"\r\n                onClick={this.handleBack}\r\n              >\r\n                BACK\r\n              </button>\r\n              {this.props.time ? (\r\n                <button\r\n                  className={this.props.time ? \"twoWay next\" : \"oneWay\"}\r\n                  type=\"button\"\r\n                  onClick={this.handleNext}\r\n                >\r\n                  NEXT\r\n                </button>\r\n              ) : (\r\n                \" \"\r\n              )}\r\n            </div>\r\n          </section>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {this.state.stage === \"color\" ? (\r\n          <section>\r\n            <ColorContainer\r\n              currentColor={this.props.color}\r\n              onColor={this.props.onColor}\r\n              colorChoices={this.props.colorChoices}\r\n            ></ColorContainer>\r\n\r\n            <div className=\"buttons colorButtons\">\r\n              <button\r\n                className={this.props.color ? \"twoWay back\" : \"oneWay\"}\r\n                type=\"button\"\r\n                onClick={this.handleBack}\r\n              >\r\n                BACK\r\n              </button>\r\n              {this.props.color ? (\r\n                <button\r\n                  className={this.props.color ? \"twoWay next\" : \"oneWay\"}\r\n                  type=\"button\"\r\n                  onClick={this.handleNext}\r\n                >\r\n                  NEXT\r\n                </button>\r\n              ) : (\r\n                \" \"\r\n              )}\r\n            </div>\r\n          </section>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {this.state.stage === \"ideas\" ? (\r\n          <section>\r\n            <PhotoContainer photos={this.props.photos}></PhotoContainer>\r\n            <div className=\"buttons ideaButtons\">\r\n              <button\r\n                className= \"oneWay\"\r\n                type=\"button\"\r\n                onClick={this.handleBack}\r\n              >\r\n                BACK\r\n              </button>\r\n          \r\n\r\n            </div>\r\n          </section>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </main>\r\n    );\r\n  }\r\n}\r\nexport default MainContainer;\r\n","import React from \"react\";\r\nimport Setting from \"./Setting\";\r\n\r\nfunction SettingContainer({ season, time, color }) {\r\n  return (\r\n    <div className=\"settingContainer\">\r\n      {season ? <Setting icon={season} size=\"1x\"  /> : \"\"}\r\n      {time ? <Setting icon={time} size=\"1x\" /> : \"\"}\r\n      {color ? <Setting icon={color} size=\"1x\" /> : \"\"}\r\n    </div>\r\n  );\r\n}\r\nexport default SettingContainer;\r\n","import React from \"react\";\r\nimport m8 from \"../assets/BM8B.png\";\r\nimport leafLV from \"../assets/leaf-lv.png\";\r\nimport leafRV from \"../assets/leaf-rv.png\";\r\nimport leafC from \"../assets/leaf-c.png\";\r\n// import leafS from \"../assets/BM8S.png\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <div className=\"logo\">\r\n      <div className=\"logoBorder\">\r\n        <div className=\"leaf leafLeft\">\r\n          <img src={leafRV} className=\"leafImage leafR\" alt=\"bride\"></img>\r\n        </div>\r\n        <div className=\"leaf leafLeftBottom\">\r\n          <img src={leafRV} className=\"leafImage leafR\" alt=\"bride\"></img>\r\n        </div>\r\n        <div className=\"leaf leafCenter\">\r\n          <img src={leafC} className=\"leafImage leafC\" alt=\"bride\"></img>\r\n        </div>\r\n        <img src={m8} alt=\"Bride Mate Logo\"></img>\r\n        <div className=\"leaf leafCenterBottom\">\r\n          <img src={leafC} className=\"leafImage leafC\" alt=\"bride\"></img>\r\n        </div>\r\n        <div className=\"leaf leafRight\">\r\n          <img src={leafLV} className=\"leafImage leafL\" alt=\"bride\"></img>\r\n        </div>\r\n        <div className=\"leaf leafRightBottom\">\r\n          <img src={leafLV} className=\"leafImage leafL\" alt=\"bride\"></img>\r\n        </div>\r\n      </div>\r\n      <div className=\"shortLogo\"> \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport SettingContainer from \"./SettingContainer\";\r\nimport Logo from \"./Logo\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction AppBar(props) {\r\n  return (\r\n    <nav className=\"appBar\">\r\n      {/* [1] logo */}\r\n      <div className=\"barLogo\">\r\n        <button aria-label=\"Home\" type=\"button\" onClick={props.onStartOver}>\r\n          <div\r\n            className={\r\n              props.season || props.time || props.color\r\n                ? \"homeLogo logoHide\"\r\n                : \"homeLogo\"\r\n            }\r\n          >\r\n            <Logo />\r\n          </div>\r\n\r\n          <div\r\n            className={\r\n              props.season || props.time || props.color\r\n                ? \"homeIcon iconShow\"\r\n                : \"homeIcon\"\r\n            }\r\n          >\r\n            <FontAwesomeIcon icon=\"home\" size=\"4x\" />\r\n          </div>\r\n        </button>\r\n      </div>\r\n      {/* [2] settings */}\r\n      <SettingContainer\r\n        season={props.season}\r\n        time={props.time}\r\n        color={props.color}\r\n      />\r\n    </nav>\r\n  );\r\n}\r\nexport default AppBar;\r\n\r\n// aria-label=\"Home\" type=\"button\" onClick={props.onStartOver}>\r\n","import React from \"react\";\r\nimport Logo from \"./Logo\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction Splash(props) {\r\n  return (\r\n    <section className=\"splash\">\r\n      {/* [1] */}\r\n      <div className=\"splashLogo\">\r\n        <Logo expand={props.expand}></Logo>\r\n      </div>\r\n\r\n      {/* [2] */}\r\n      <div className=\"splashControl\">\r\n        <button type=\"button\" onClick={props.onStart}>\r\n          <span>START</span>{\" \"}\r\n          <FontAwesomeIcon icon=\"sign-in-alt\" size=\"1x\"></FontAwesomeIcon>\r\n        </button>\r\n      </div>\r\n\r\n      {/* [3] */}\r\n      <div className=\"splashInfo\">\r\n        <span></span>\r\n        <h1> GET IDEAL WEDDING COLOURS </h1>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Splash;\r\n","import React, { Component, Fragment} from \"react\";\r\nimport firebase from \"./firebaseConfig\";\r\nimport MainContainer from \"./components/MainContainer\";\r\nimport AppBar from \"./components/AppBar\";\r\nimport Splash from \"./components/Splash\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport \"./App.scss\";\r\nimport {\r\n  faUmbrella,\r\n  faSnowflake,\r\n  faLeaf,\r\n  faSun,\r\n  faUmbrellaBeach,\r\n  faMoon,\r\n  faCloudRain,\r\n  faPalette,\r\n  faBirthdayCake,\r\n  faGift,\r\n  faSpa,\r\n  faWineGlass,\r\n  faChessBoard,\r\n  faEnvelopeOpenText,\r\n  faDoorOpen,\r\n  faShapes,\r\n  faCaretSquareLeft,\r\n  faCaretSquareRight,\r\n  faHome,\r\n  faGripVertical,\r\n  faBookOpen,\r\n  faSignInAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// setup icons from Font Awesome\r\nlibrary.add(\r\n  fab,\r\n  faUmbrella,\r\n  faSnowflake,\r\n  faLeaf,\r\n  faSun,\r\n  faUmbrellaBeach,\r\n  faMoon,\r\n  faCloudRain,\r\n  faPalette,\r\n  faBirthdayCake,\r\n  faGift,\r\n  faSpa,\r\n  faWineGlass,\r\n  faChessBoard,\r\n  faEnvelopeOpenText,\r\n  faDoorOpen,\r\n  faShapes,\r\n  faCaretSquareLeft,\r\n  faCaretSquareRight,\r\n  faHome,\r\n  faGripVertical,\r\n  faBookOpen,\r\n  faSignInAlt\r\n);\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      expand: false,\r\n      isIntro: true,\r\n      season: \"\",\r\n      time: \"\",\r\n      colorSet: \"\",\r\n      colorChoices: [],\r\n      photos: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        expand: true,\r\n      });\r\n    }, 1000)\r\n  }\r\n\r\n\r\n  handleRollBack = setback => {\r\n    if (setback === \"season\") {\r\n      this.setState({ season: \"\" });\r\n    } else if (setback === \"time\") {\r\n      this.setState({ time: \"\" });\r\n    } else if (setback === \"color\") {\r\n      this.setState({\r\n        colorSet: \"\",\r\n        colorChoices: [],\r\n        photos: []\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRollForward = forward => {\r\n    if (forward === \"time\") {\r\n      this.getColorSets();\r\n    }\r\n  };\r\n\r\n  handleStart = () => {\r\n    this.setState({\r\n      isIntro: false,\r\n    });\r\n  };\r\n\r\n  handleStartOver = () => {\r\n    this.setState({\r\n      isIntro: true\r\n    });\r\n  };\r\n\r\n  handleSeasonChoice = season => {\r\n    this.setState({\r\n      season: season\r\n    });\r\n    if (this.state.time) {\r\n      this.getColorSets();\r\n    }\r\n  };\r\n\r\n  handleTimeChoice = time => {\r\n    this.setState({\r\n      time: time\r\n    });\r\n    if (this.state.season) {\r\n      this.getColorSets();\r\n    }\r\n  };\r\n\r\n  handleColorChoice = colors => {\r\n    this.setState(\r\n      {\r\n        colorSet: colors\r\n      },\r\n      () => {\r\n        this.getPhotoSets();\r\n      }\r\n    );\r\n  };\r\n\r\n  getColorSets = () => {\r\n    const dbRef = firebase.database().ref(\"ColorSets\");\r\n    dbRef.on(\"value\", response => {\r\n      const setsFromDB = response.val();\r\n      const arrayOfDBSets = [];\r\n      for (let key in setsFromDB) {\r\n        arrayOfDBSets.push({\r\n          colors: key,\r\n          primary: setsFromDB[key].primary,\r\n          secondary: setsFromDB[key].secondary,\r\n          seasons: setsFromDB[key].seasons,\r\n          time: setsFromDB[key].time\r\n        });\r\n      }\r\n      const filteredSets = arrayOfDBSets\r\n        .filter(set => set.seasons.includes(this.state.season))\r\n        .filter(set => set.time.includes(this.state.time)).slice(0, 6);\r\n\r\n      this.setState({\r\n        colorChoices: filteredSets\r\n      });\r\n    });\r\n  };\r\n\r\n  getPhotoSets = () => {\r\n    const dbRef = firebase.database().ref(`PhotoSets/${this.state.colorSet}`);\r\n    dbRef.on(\"value\", response => {\r\n      const photosFromDB = response.val();\r\n      const arrayDBPhotos = [];\r\n      for (let key in photosFromDB) {\r\n        arrayDBPhotos.push({\r\n          domain: key,\r\n          photoUrl: photosFromDB[key]\r\n        });\r\n      }\r\n      this.setState({\r\n        photos: arrayDBPhotos\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper App\">\r\n        {this.state.isIntro ? (\r\n          \"\"\r\n        ) : (\r\n          <Fragment>\r\n            <AppBar\r\n              onStartOver={this.handleStartOver}\r\n              season={this.state.season}\r\n              time={this.state.time}\r\n              color={this.state.colorSet}\r\n            />\r\n          </Fragment>\r\n        )}\r\n        {this.state.isIntro ? (\r\n          <Splash onStart={this.handleStart} expand={this.state.expand}/>\r\n        ) : (\r\n          <MainContainer\r\n            onSeason={this.handleSeasonChoice}\r\n            onTime={this.handleTimeChoice}\r\n            onColor={this.handleColorChoice}\r\n            season={this.state.season}\r\n            time={this.state.time}\r\n            color={this.state.colorSet}\r\n            colorChoices={this.state.colorChoices}\r\n            photos={this.state.photos}\r\n            onRollBack={this.handleRollBack}\r\n            onRollForward={this.handleRollForward}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}