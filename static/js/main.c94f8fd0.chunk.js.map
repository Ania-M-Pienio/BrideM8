{"version":3,"sources":["assets/BM8B.png","firebaseConfig.js","components/Setting.js","components/Choice.js","components/SeasonContainer.js","components/TimeContainer.js","components/ColorChoice.js","components/Idea.js","components/IdeasContainer.js","components/ColorContainer.js","components/MainContainer.js","components/SettingContainer.js","components/Logo.js","components/AppBar.js","components/Splash.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Setting","state","graphics","type","icon","thisGraphic","icons","colorOne","colorTwo","this","props","includes","filter","i","split","className","size","Component","Choice","selected","role","choice","onClick","onSeason","htmlFor","id","name","choiceGroup","onChange","SeasonContainer","aria-label","currentSeason","TimeContainer","currentTime","onTime","ColorChoice","onColor","choiceSet","Idea","current","domain","color","url","src","alt","IdeasContainer","handleLeft","page","setState","handleRight","domains","cake","favor","floral","invite","pattern","tableware","venue","pageOne","pageTwo","pageOneDomain","photos","pageOneIcon","pageTwoDomain","pageTwoIcon","photoUrl","ColorContainer","colorChoices","map","key","colors","primary","secondary","currentColor","length","MainContainer","handleNext","nowIndex","stages","indexOf","stage","onRollForward","handleBack","onRollBack","season","time","href","rel","target","SettingContainer","Logo","m8","AppBar","onStartOver","Splash","onStart","library","add","fab","faUmbrella","faSnowflake","faLeaf","faSun","faUmbrellaBeach","faMoon","faCloudRain","faPalette","faBirthdayCake","faGift","faSpa","faWineGlass","faChessBoard","faEnvelopeOpenText","faDoorOpen","faShapes","faCaretSquareLeft","faCaretSquareRight","faHome","App","handleRollBack","setback","colorSet","handleRollForward","forward","getColorSets","handleStart","isIntro","handleStartOver","handleSeasonChoice","handleTimeChoice","handleColorChoice","getPhotoSets","database","ref","on","response","setsFromDB","val","arrayOfDBSets","push","seasons","filteredSets","set","photosFromDB","arrayDBPhotos","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c94f8fd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BM8B.74687aa8.png\";","import firebase from 'firebase';\r\n\r\n// Configure Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAMMOkh5Ls1WnsR5wCHrLVXTk5H3kBDYK0\",\r\n  authDomain: \"bridem8-79cc0.firebaseapp.com\",\r\n  databaseURL: \"https://bridem8-79cc0.firebaseio.com\",\r\n  projectId: \"bridem8-79cc0\",\r\n  storageBucket: \"bridem8-79cc0.appspot.com\",\r\n  messagingSenderId: \"168735233550\",\r\n  appId: \"1:168735233550:web:3f1d2281bcfefdbbb48e5f\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component, Fragment } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Setting extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // all the differnt types of icons that the Setting could display\r\n      graphics: [\r\n        { type: \"winter\", icon: \"snowflake\" },\r\n        { type: \"spring\", icon: \"leaf\" },\r\n        { type: \"summer\", icon: \"umbrella-beach\" },\r\n        { type: \"fall\", icon: \"cloud-rain\" },\r\n        { type: \"daytime\", icon: \"sun\" },\r\n        { type: \"evening\", icon: \"moon\" },\r\n        { type: \"color\", icon: \"palette\" }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let thisGraphic = \"\";\r\n    let icons = [];\r\n    let colorOne = \"\";\r\n    let colorTwo = \"\";\r\n    // determining which kind of icon should be used in the display of the setting\r\n    if (this.props.icon.includes(\"_\")) {\r\n      icons = this.state.graphics.filter(i => i.type === \"color\");\r\n      colorOne = this.props.icon.split(\"_\")[0];\r\n      colorTwo = this.props.icon.split(\"_\")[1];\r\n    } else {\r\n      icons = this.state.graphics.filter(i => i.type === this.props.icon);\r\n    }\r\n    // select the filtered icon every time component renders\r\n    thisGraphic = icons[0];\r\n\r\n    return (\r\n      <div className=\"setting\">\r\n        {this.props.icon ? (\r\n          <FontAwesomeIcon icon={thisGraphic.icon} size={this.props.size} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <h3>\r\n          {this.props.icon.includes(\"_\") ? (\r\n            <Fragment>\r\n              {\" \"}\r\n              <span>{colorOne}</span> &amp; <span>{colorTwo}</span>{\" \"}\r\n            </Fragment>\r\n          ) : (\r\n            thisGraphic.type\r\n          )}\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Setting;\r\n","import React, { Component } from \"react\";\r\nimport Setting from \"./Setting\";\r\n\r\nclass Choice extends Component {\r\n  render() {\r\n    return (\r\n      <div className={this.props.selected ? \"choice selected\" : \"choice\"}>\r\n        <button\r\n          role={ \"choose \" + this.props.choice}\r\n          onClick={() => {\r\n            this.props.onSeason(this.props.choice);\r\n          }}\r\n        >\r\n          <label htmlFor={this.props.choice}>   \r\n            <div className=\"choiceIcon\">\r\n              <Setting icon={this.props.choice} size=\"1x\" />\r\n            </div>\r\n          </label>\r\n          <input\r\n            type=\"radio\"\r\n            id={this.props.choice}\r\n            name={this.props.choiceGroup}\r\n            onChange={() => {\r\n              this.props.onSeason(this.props.choice);\r\n            }}\r\n          ></input>\r\n        </button>\r\n      </div>  \r\n    );\r\n  }\r\n}\r\nexport default Choice;\r\n","import React, { Component } from \"react\";\r\nimport Choice from \"./Choice\";\r\n\r\nclass SeasonContainer extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"seasonContainer\">\r\n        \r\n        <h1 aria-label=\"CHOOSE THE SEASON OF THE WEDDING\">\r\n          CHOOSE THE SEASON OF THE WEDDING\r\n        </h1>\r\n        <div className=\"seasonChoiceContainer\">\r\n          <Choice\r\n            choiceGroup=\"season\"\r\n            choice=\"winter\"\r\n            selected={this.props.currentSeason === \"winter\"}\r\n            onSeason={this.props.onSeason}\r\n          />\r\n          <Choice\r\n            choiceGroup=\"season\"\r\n            choice=\"spring\"\r\n            selected={this.props.currentSeason === \"spring\"}\r\n            onSeason={this.props.onSeason}\r\n          />\r\n          <Choice\r\n            choiceGroup=\"season\"\r\n            choice=\"summer\"\r\n            selected={this.props.currentSeason === \"summer\"}\r\n            onSeason={this.props.onSeason}\r\n          />\r\n          <Choice\r\n            choiceGroup=\"season\"\r\n            choice=\"fall\"\r\n            selected={this.props.currentSeason === \"fall\"}\r\n            onSeason={this.props.onSeason}\r\n          />\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default SeasonContainer;\r\n","import React from \"react\";\r\nimport Choice from './Choice';\r\n\r\nfunction TimeContainer(props) {\r\n    return (\r\n      <section className=\"timeContainer\">\r\n        <h1 aria-label=\"CHOOSE THE TIME OF THE WEDDING\">\r\n          CHOOSE THE TIME OF THE WEDDING\r\n        </h1>\r\n        <div className=\"timeChoiceContainer\">\r\n          <Choice\r\n            choiceGroup=\"time\"\r\n            choice=\"daytime\"\r\n            selected={props.currentTime === \"daytime\"}\r\n            onSeason={props.onTime}\r\n          />\r\n          <Choice\r\n            choiceGroup=\"time\"\r\n            choice=\"evening\"\r\n            selected={props.currentTime === \"evening\"}\r\n            onSeason={props.onTime}\r\n          />\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\nexport default TimeContainer;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass ColorChoice extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.selected ? \"colorChoice selected\" : \"colorChoice\"}\r\n      >\r\n        <button\r\n          onClick={() => {\r\n            this.props.onColor(this.props.choice);\r\n          }}\r\n        >\r\n          <h3 className=\"colorTitle\">\r\n            <span>{this.props.choiceSet.colorOne} </span>\r\n            <span>{this.props.choiceSet.colorTwo} </span>\r\n          </h3>\r\n\r\n          <label htmlFor={this.props.choice}>\r\n            <div className=\"colorChoiceIcon\">\r\n              <div\r\n                className={\"colorTwo \" + this.props.choiceSet.colorTwo}\r\n              ></div>\r\n              <div\r\n                className={\"colorOne \" + this.props.choiceSet.colorOne}\r\n              ></div>\r\n              <span className=\"colorSelect\">\r\n                <FontAwesomeIcon icon=\"palette\" size=\"1x\" />\r\n              </span>\r\n            </div>\r\n          </label>\r\n          <input\r\n            type=\"radio\"\r\n            id={this.props.choice}\r\n            name={this.props.choiceGroup}\r\n            onClick={() => {\r\n              this.props.onColor(this.props.choice);\r\n            }}\r\n          ></input>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ColorChoice;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction Idea({ current, color, domain, url, icon }) {\r\n  return (\r\n    <div className=\"ideasPhotoPage\">\r\n      <img src={url} alt={domain + \" photo idea for \" + current}></img>\r\n      <div className=\"ideasIconContainer\">\r\n        <button aria-label={domain}>\r\n          <FontAwesomeIcon icon={icon} size=\"4x\" className=\"ideaIco\" />\r\n        </button>\r\n        <h3>{domain === \"tableware\" ? \"table ware\" : domain} </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Idea;\r\n","import React, { Component } from \"react\";\r\nimport Idea from './Idea';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass IdeasContainer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      page: 0,\r\n      domains: {\r\n        cake: \"birthday-cake\",\r\n        \"center piece\": \"shapes\",\r\n        favor: \"gift\",\r\n        floral: \"spa\",\r\n        invite: \"envelope-open-text\",\r\n        pattern: \"chess-board\",\r\n        tableware: \"wine-glass\",\r\n        venue: \"door-open\"\r\n      }\r\n    };\r\n  }\r\n\r\n  handleLeft = () => {\r\n    if (this.state.page > 0) {\r\n      this.setState({\r\n        page: this.state.page - 1\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRight = () => {\r\n    if (this.state.page < 6) {\r\n      this.setState({\r\n        page: this.state.page + 1\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // prepare data to be used in render\r\n    const colorOne = this.props.current.split(\"_\")[0];\r\n    const pageOne = this.state.page;\r\n    const pageTwo = this.state.page + 1;\r\n    const pageOneDomain = this.props.photos[pageOne].domain;\r\n    const pageOneIcon = this.state.domains[pageOneDomain];\r\n    const pageTwoDomain = this.props.photos[pageTwo].domain;\r\n    const pageTwoIcon = this.state.domains[pageTwoDomain];\r\n\r\n    return (\r\n      <div className=\"ideasContainer\">\r\n        <div className=\"left\">\r\n          <button type=\"button\" onClick={this.handleLeft}>\r\n            {pageOne > 0 ? (\r\n              <FontAwesomeIcon\r\n                icon=\"caret-square-left\"\r\n                size=\"2x\"\r\n                className=\"icoLeft\"\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </button>\r\n        </div>\r\n        <Idea\r\n          current={this.props.current}\r\n          color={colorOne}\r\n          domain={pageOneDomain}\r\n          url={this.props.photos[pageOne].photoUrl}\r\n          icon={pageOneIcon}\r\n        />\r\n        <Idea\r\n          current={this.props.current}\r\n          color={colorOne}\r\n          domain={pageTwoDomain}\r\n          url={this.props.photos[pageTwo].photoUrl}\r\n          icon={pageTwoIcon}\r\n        />\r\n        <div className=\"right\">\r\n          <button type=\"button\" onClick={this.handleRight}>\r\n            {pageOne < 6 ? (\r\n              <FontAwesomeIcon\r\n                icon=\"caret-square-right\"\r\n                size=\"2x\"\r\n                className=\"icoRight\"\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default IdeasContainer;\r\n","import React, { Fragment } from \"react\";\r\nimport ColorChoice from \"./ColorChoice\";\r\nimport IdeasContainer from \"./IdeasContainer\";\r\n\r\nfunction ColorContainer(props) {\r\n    return (\r\n      <section className=\"colorContainer\">\r\n        <h1 aria-label=\"PICK A COLOUR SCHEME\">PICK A COLOUR SCHEME</h1>\r\n        <div className=\"colorChoiceContainer\">\r\n          {props.colorChoices.map(choice => (\r\n              <ColorChoice\r\n                key={choice.colors}\r\n                choiceGroup=\"color\"\r\n                choice={choice.colors}\r\n                choiceSet={{\r\n                  colorOne: choice.primary.name,\r\n                  colorTwo: choice.secondary.name\r\n                }}\r\n                selected={props.currentColor === choice.colors}\r\n                onColor={props.onColor}\r\n              />\r\n          ))}\r\n        </div>\r\n        <div className=\"photosContainer\">\r\n          {props.photos.length === 0 ? (\r\n            \"\"\r\n          ) : (\r\n            <Fragment>\r\n              <IdeasContainer\r\n                current={props.currentColor}\r\n                photos={props.photos}\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\nexport default ColorContainer;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport SeasonContainer from \"./SeasonContainer\";\r\nimport TimeContainer from \"./TimeContainer\";\r\nimport ColorContainer from \"./ColorContainer\";\r\n\r\nclass MainContainer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      stage: \"season\",\r\n      stages: [\"season\", \"time\", \"color\", \"ideas\"],\r\n    };\r\n  }\r\n\r\n  handleNext = () => {\r\n    const nowIndex = this.state.stages.indexOf(this.state.stage);\r\n    if (this.state.stage === \"time\") {\r\n      this.props.onRollForward(this.state.stages[nowIndex]);\r\n    }\r\n    this.setState({\r\n      stage: this.state.stages[nowIndex + 1],\r\n    });\r\n  };\r\n\r\n  handleBack = () => {\r\n    const nowIndex = this.state.stages.indexOf(this.state.stage);\r\n    this.props.onRollBack(this.state.stages[nowIndex]);\r\n    this.setState({\r\n      stage: this.state.stages[nowIndex - 1],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"mainContainer\">\r\n        {this.state.stage === \"season\" ? (\r\n          <Fragment>\r\n            <SeasonContainer\r\n              currentSeason={this.props.season}\r\n              onSeason={this.props.onSeason}\r\n            ></SeasonContainer>\r\n            {this.props.season ? (\r\n              <button\r\n                className=\"oneWay\"\r\n                type=\"button\"\r\n                onClick={this.handleNext}\r\n              >\r\n                NEXT\r\n              </button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Fragment>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {this.state.stage === \"time\" ? (\r\n          <Fragment>\r\n            <TimeContainer\r\n              currentTime={this.props.time}\r\n              onTime={this.props.onTime}\r\n            ></TimeContainer>\r\n            <button\r\n              className={this.props.time ? \"twoWay back\" : \"oneWay\"}\r\n              type=\"button\"\r\n              onClick={this.handleBack}\r\n            >\r\n              BACK\r\n            </button>\r\n            {this.props.time ? (\r\n              <button\r\n                className={this.props.time ? \"twoWay next\" : \"oneWay\"}\r\n                type=\"button\"\r\n                onClick={this.handleNext}\r\n              >\r\n                NEXT\r\n              </button>\r\n            ) : (\r\n              \" \"\r\n            )}\r\n          </Fragment>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {this.state.stage === \"color\" ? (\r\n          <Fragment>\r\n            <ColorContainer\r\n              currentColor={this.props.color}\r\n              onColor={this.props.onColor}\r\n              colorChoices={this.props.colorChoices}\r\n              photos={this.props.photos}\r\n            />\r\n            <button\r\n              className={this.props.color ? \"twoWay back\" : \"oneWay\"}\r\n              type=\"button\"\r\n              onClick={this.handleBack}\r\n            >\r\n              BACK\r\n            </button>\r\n            {this.props.color ? (\r\n              <button className=\"twoWay next\" type=\"button\">\r\n                <a\r\n                  href=\"https://forms.gle/CNp9wyaaY8iRXPNu7\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  GIVE FEEDBACK\r\n                </a>\r\n              </button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Fragment>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </main>\r\n    );\r\n  }\r\n}\r\nexport default MainContainer;\r\n","import React from \"react\";\r\nimport Setting from \"./Setting\";\r\n\r\nfunction SettingContainer({ season, time, color }) {\r\n  return (\r\n    <div className=\"settingContainer\">\r\n      {season ? <Setting icon={season} size=\"1x\"  /> : \"\"}\r\n      {time ? <Setting icon={time} size=\"1x\" /> : \"\"}\r\n      {color ? <Setting icon={color} size=\"1x\" /> : \"\"}\r\n    </div>\r\n  );\r\n}\r\nexport default SettingContainer;\r\n","import React from 'react';\r\nimport m8 from '../assets/BM8B.png';\r\n\r\nfunction Logo() {\r\n  return (\r\n  <div className=\"logo\">\r\n    <div className=\"logoBorder\">\r\n       <img src={m8} alt=\"Bride Mate Logo\"></img>        \r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Logo;","import React from \"react\";\r\nimport SettingContainer from \"./SettingContainer\";\r\nimport Logo from \"./Logo\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction AppBar(props) {\r\n  return (\r\n    <nav className=\"appBar\">\r\n      <div className=\"barLogo\">\r\n        <button aria-label=\"Home\" type=\"button\" onClick={props.onStartOver}>\r\n          <div\r\n            className={\r\n              props.season || props.time || props.color\r\n                ? \"homeLogo logoHide\"\r\n                : \"homeLogo\"\r\n            }\r\n          >\r\n            <Logo />\r\n          </div>\r\n          <div\r\n            className={\r\n              props.season || props.time || props.color\r\n                ? \"homeIcon iconShow\"\r\n                : \"homeIcon\"\r\n            }\r\n          >\r\n            <FontAwesomeIcon icon=\"home\" size=\"4x\" />\r\n          </div>\r\n          <span className=\"home\">HOME</span>\r\n        </button>\r\n      </div>\r\n      <SettingContainer\r\n        season={props.season}\r\n        time={props.time}\r\n        color={props.color}\r\n      />\r\n    </nav>\r\n  );\r\n}\r\nexport default AppBar;\r\n\r\n\r\n// aria-label=\"Home\" type=\"button\" onClick={props.onStartOver}>","import React from \"react\";\r\nimport Logo from \"./Logo\";\r\n\r\nfunction Splash(props) {\r\n\r\n    return (\r\n      <section className=\"splash\">\r\n        <div className=\"splashLogo\">\r\n          <Logo />\r\n        </div>\r\n          <button type=\"button\" onClick={props.onStart}>\r\n            GET STARTED\r\n          </button>\r\n \r\n          <h1> GET IDEAL WEDDING COLOURS </h1>\r\n\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport firebase from \"./firebaseConfig\";\r\nimport MainContainer from \"./components/MainContainer\";\r\nimport AppBar from \"./components/AppBar\";\r\nimport Splash from \"./components/Splash\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport \"./App.scss\";\r\nimport {\r\n  faUmbrella,\r\n  faSnowflake,\r\n  faLeaf,\r\n  faSun,\r\n  faUmbrellaBeach,\r\n  faMoon,\r\n  faCloudRain,\r\n  faPalette,\r\n  faBirthdayCake,\r\n  faGift,\r\n  faSpa,\r\n  faWineGlass,\r\n  faChessBoard,\r\n  faEnvelopeOpenText,\r\n  faDoorOpen,\r\n  faShapes,\r\n  faCaretSquareLeft,\r\n  faCaretSquareRight,\r\n  faHome,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// setup icons from Font Awesome\r\nlibrary.add(\r\n  fab,\r\n  faUmbrella,\r\n  faSnowflake,\r\n  faLeaf,\r\n  faSun,\r\n  faUmbrellaBeach,\r\n  faMoon,\r\n  faCloudRain,\r\n  faPalette,\r\n  faBirthdayCake,\r\n  faGift,\r\n  faSpa,\r\n  faWineGlass,\r\n  faChessBoard,\r\n  faEnvelopeOpenText,\r\n  faDoorOpen,\r\n  faShapes,\r\n  faCaretSquareLeft,\r\n  faCaretSquareRight,\r\n  faHome,\r\n);\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isIntro: true,\r\n      season: \"\",\r\n      time: \"\",\r\n      colorSet: \"\",\r\n      colorChoices: [],\r\n      photos: []\r\n    };\r\n  }\r\n\r\n\r\n  handleRollBack = setback => {\r\n    if (setback === \"season\") {\r\n      this.setState({ season: \"\" });\r\n    } else if (setback === \"time\") {\r\n      this.setState({ time: \"\" });\r\n    } else if (setback === \"color\") {\r\n      this.setState({\r\n        colorSet: \"\",\r\n        colorChoices: [],\r\n        photos: []\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRollForward = forward => {\r\n    if (forward === \"time\") {\r\n      this.getColorSets();\r\n    }\r\n  };\r\n\r\n  handleStart = () => {\r\n    this.setState({\r\n      isIntro: false,\r\n    });\r\n  };\r\n\r\n  handleStartOver = () => {\r\n    this.setState({\r\n      isIntro: true\r\n    });\r\n  };\r\n\r\n  handleSeasonChoice = season => {\r\n    this.setState({\r\n      season: season\r\n    });\r\n    if (this.state.time) {\r\n      this.getColorSets();\r\n    }\r\n  };\r\n\r\n  handleTimeChoice = time => {\r\n    this.setState({\r\n      time: time\r\n    });\r\n    if (this.state.season) {\r\n      this.getColorSets();\r\n    }\r\n  };\r\n\r\n  handleColorChoice = colors => {\r\n    this.setState(\r\n      {\r\n        colorSet: colors\r\n      },\r\n      () => {\r\n        this.getPhotoSets();\r\n      }\r\n    );\r\n  };\r\n\r\n  getColorSets = () => {\r\n    \r\n    const dbRef = firebase.database().ref(\"ColorSets\");\r\n    dbRef.on(\"value\", response => {\r\n      const setsFromDB = response.val();\r\n      const arrayOfDBSets = [];\r\n      for (let key in setsFromDB) {\r\n        arrayOfDBSets.push({\r\n          colors: key,\r\n          primary: setsFromDB[key].primary,\r\n          secondary: setsFromDB[key].secondary,\r\n          seasons: setsFromDB[key].seasons,\r\n          time: setsFromDB[key].time\r\n        });\r\n      }\r\n      const filteredSets = arrayOfDBSets\r\n        .filter(set => set.seasons.includes(this.state.season))\r\n        .filter(set => set.time.includes(this.state.time));\r\n\r\n      this.setState({\r\n        colorChoices: filteredSets\r\n      });\r\n    });\r\n  };\r\n\r\n  getPhotoSets = () => {\r\n    const dbRef = firebase.database().ref(`PhotoSets/${this.state.colorSet}`);\r\n    dbRef.on(\"value\", response => {\r\n      const photosFromDB = response.val();\r\n      const arrayDBPhotos = [];\r\n      for (let key in photosFromDB) {\r\n        arrayDBPhotos.push({\r\n          domain: key,\r\n          photoUrl: photosFromDB[key]\r\n        });\r\n      }\r\n      this.setState({\r\n        photos: arrayDBPhotos\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper App\">\r\n        {this.state.isIntro ? (\r\n          \"\"\r\n        ) : (\r\n          <Fragment>\r\n            <AppBar\r\n              onStartOver={this.handleStartOver}\r\n              season={this.state.season}\r\n              time={this.state.time}\r\n              color={this.state.colorSet}\r\n            />\r\n          </Fragment>\r\n        )}\r\n        {this.state.isIntro ? (\r\n          <Splash onStart={this.handleStart} />\r\n        ) : (\r\n          <MainContainer\r\n            onSeason={this.handleSeasonChoice}\r\n            onTime={this.handleTimeChoice}\r\n            onColor={this.handleColorChoice}\r\n            season={this.state.season}\r\n            time={this.state.time}\r\n            color={this.state.colorSet}\r\n            colorChoices={this.state.colorChoices}\r\n            photos={this.state.photos}\r\n            onRollBack={this.handleRollBack}\r\n            onRollForward={this.handleRollForward}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}